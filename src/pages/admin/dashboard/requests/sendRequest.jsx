import { useState } from 'react';
import { TextField } from '@mui/material';
import Checkbox from '@mui/material/Checkbox';
import useToggleState from '../../../../hooks/useToggleState';

export default function SendRequest({ document, handleStateChange }) {
    const [sendRequestComment, setRequestComment] = useState('');

    const handleChangeCommentState = (e) => {
        setRequestComment(e.target.value);
        handleStateChange('comment', sendRequestComment);
    }

    // console.log('‚Ä¢ viewRequests.jsx is working üìë');
    return (
        <div className='request-drawer__content'>
            <div className='request-drawer__content--form-container'>
                <div className='form-container'>
                    <h4 className='form-container__label text-disabled'>–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏</h4>
                    <h2 className='form-container__value'>{document.name}</h2>
                </div>
                <div className='form-container'>
                    <h4 className='form-container__label text-disabled'>–†–µ–∂–∏–º</h4>
                    <h2 className='form-container__value'>{document.rejim}</h2>
                </div>
                <CheckBase
                    label={'–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –Ω–∞–∫–ª–∞–¥–Ω–∞—è ( TIR, CMR, –∂–¥, –Ω–∞–∫–ª–∞–¥–Ω–∞—è, –∞–≤–∏–∞ –Ω–∞–∫–ª–∞–¥–Ω–∞—è, –∫–æ–Ω–æ—Å–∞–º–µ–Ω—Ç –∏ —Ç.–¥ )'}
                    name={document.transport_nak.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'transport_nak'
                    }}
                /> 
            </div>
            <div className='request-drawer__content--form-container'>
                <CheckBase
                    label={'–ò–Ω–≤–æ–π—Å'}
                    name={document.invoice.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'invoice'
                    }}
                /> 
                <CheckBase
                    label={'–£–ø–∞–∫–æ–≤–æ—á–Ω—ã–π –ª–∏—Å—Ç'}
                    name={document.package_list.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'invoice'
                    }}
                /> 
                <CheckBase
                    label={'–ö–æ–Ω—Ç—Ä–∞–∫—Ç'}
                    name={document.contract.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'contract'
                    }}
                /> 
            </div>
            <div className='request-drawer__content--form-container'>
                <CheckBase
                    label={'–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è'}
                    name={document.certificate.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'certificate'
                    }}
                />
                <CheckBase
                    label={'–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è'}
                    name={document.extra_doc.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'extra_doc'
                    }}
                /> 
                <CheckBase
                    label={'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤'}
                    name={document.product_list.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'product_list'
                    }}
                /> 
            </div>
            <div className='request-drawer__content--form-container'>
                <div className='form-container'>
                    <h4 className='form-container__label text-disabled'>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≥—Ä—É–∑–∞</h4>
                    <h2 className='form-container__value'>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–¥–æ–≤ –¢–ù–í–≠–î</h2>
                </div>
                <CheckBase
                    label={'–ü—Ä–æ—á–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã'}
                    name={document.prochie_doc.filename}
                    optionChange={{
                        change: handleStateChange,
                        stateVal: 'prochie_doc'
                    }}
                />
            </div>
            <div className='request-drawer__content--form-container'>
                <div className='form-container w-100'>
                    <h4 className='form-container__label text-disabled'>
                        –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ—Å—Ç —Ç–∞–º–æ–∂–Ω–∏
                    </h4>
                    <h2 className='form-container__value'>
                        –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, –¢–∞—à–∫–µ–Ω—Ç, –Ø—à–Ω–∞–±–∞–¥—Å–∫...   
                    </h2>
                </div>
            </div>
            <div className='request-drawer__content--form-container'>
                <div className='form-container w-100 no-border padding-bottom-5'>
                    <h4 className='form-container__label text-disabled'>
                        –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞—è–≤–∫–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
                    </h4>
                    <TextField
                        margin={'dense'}
                        id={'form-cancelation-textarea'}
                        label={'–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞...'}
                        type={'text'}
                        fullWidth
                        multiline
                        rows={4}
                        variant={'filled'}
                        value={sendRequestComment}
                        onChange={handleChangeCommentState}
                        className={'form__textarea--error'}
                    />
                </div>
            </div>
        </div>
    );
}

function CheckBase({ 
    label, 
    name,
    optionChange
}) {
    const [state, toggle] = useToggleState(false);

    const handleChangeToggle = (e) => {
        toggle();
        optionChange.change(optionChange.stateVal, !state);
    }
    return (
        <div className='form-container'>
            <h4 className='form-container__label text-disabled'>{label}</h4>
            <div className='form-container__details'>
                <h2 className='form-container__value'>{name}</h2>
                <Checkbox
                    color={'error'}
                    value={state}
                    onChange={handleChangeToggle}
                />
            </div>
        </div>
    )
}
